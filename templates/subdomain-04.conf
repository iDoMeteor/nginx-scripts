  # DEBUGGING ONLY
  # Adds X-Cache-Status HTTP header to client response
  #add_header X-Cache-Status \$upstream_cache_status;

  # Disable delete, put and trace requests
  if (\$request_method !~ ^(GET|HEAD|OPTIONS|POST)\$)
  {
    return 405;
  }

  # Rate limit access to thanks & thanks again
  location = /thanks {
    limit_req zone=subsperip burst=5 nodelay;
    limit_req zone=subsperserver burst=10;
    proxy_pass https://bl;
  }

  # Normalize Accept-Encoding header
  set \$encoding '';
  if (\$http_accept_encoding ~* deflate) {
    set \$encoding 'deflate';
  }
  if (\$http_accept_encoding ~* sdch) {
    set \$encoding 'sdch';
  }
  if (\$http_accept_encoding ~* gzip) {
    set \$encoding 'gzip';
  }

  # Prevent IE & Chrome from inferrng mime types
  add_header          X-Content-Type-Options nosniff;

  location / {
    # Set it up
    proxy_pass http://bl-subs;
    # Let Set-Cookie through
    proxy_pass_header Set-Cookie;
    # Buffer upstream responses while passing to client
    proxy_buffers 16 256k;
    proxy_buffer_size 4k;
    #proxy_busy_buffer_size 256k; # N+
    # Turn caching on
    #proxy_cache cache;
    # Bypass cache under these conditions
    proxy_cache_bypass \$cookie_nocache \$arg_nocache;
    # Add normalized Accept-Encoding flag to default proxy cache key
    proxy_cache_key \$scheme\$host\$request_uri\$encoding;
    # Only send one request for a non-cached request upstream rather than all concurrent requests
    proxy_cache_lock on;
    # Minimum number of times object key must be requested before being cached (only cache popular if cache filling up too often)
    proxy_cache_min_uses 1;
    # Send `If-Modified-Since` header in request to upstream
    proxy_cache_revalidate on;
    # Use stale content when these responses received
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    # Alter length of time responses with specific status codes are valid
    proxy_cache_valid 4h;
    proxy_cache_valid 404 500 502 503 504      1m;
    # Required for upstream connection caching
    proxy_http_version 1.1;
    # Do not cache at all under these conditions
    proxy_no_cache \$http_authorization;
    # Required for upstream connection caching
    proxy_set_header Connection '';
    # Pass requested host
    proxy_set_header Host \$host;
    # Pass client info
    #proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    # Pass real client IPs
    #proxy_set_header X-Real-IP \$remote_addr;
  }

}"
